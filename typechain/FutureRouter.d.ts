/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import type { TypedEventFilter, TypedEvent, TypedListener } from "./common";

interface FutureRouterInterface extends ethers.utils.Interface {
  functions: {
    "bulkCancelOrder(uint256[],uint256[])": FunctionFragment;
    "bulkLimitOrderExecable(address[],uint256[],address[],uint256[])": FunctionFragment;
    "bulkLiquidatePosition(address[],address[],address[],bool[])": FunctionFragment;
    "cancelDecreaseOrder(uint256)": FunctionFragment;
    "cancelIncreaseOrder(uint256)": FunctionFragment;
    "decreaseMargin(address,address,bool,uint256,address)": FunctionFragment;
    "decreaseMarginETH(address,address,bool,uint256,address)": FunctionFragment;
    "decreasePosition(address,address,bool,uint256,uint256,uint256,uint256,address)": FunctionFragment;
    "decreasePositionETH(address,address,bool,uint256,uint256,uint256,uint256,address)": FunctionFragment;
    "execDecreaseOrder(address,uint256)": FunctionFragment;
    "execIncreaseOrder(address,uint256)": FunctionFragment;
    "future()": FunctionFragment;
    "futureLimit()": FunctionFragment;
    "getLimitMinExecFee()": FunctionFragment;
    "increaseInsuranceFund(address,uint256)": FunctionFragment;
    "increaseMargin(address,address,address,bool,uint256,uint256)": FunctionFragment;
    "increaseMarginETH(address,address,bool,uint256)": FunctionFragment;
    "increasePosition(address,address,address,bool,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "increasePositionETH(address,address,bool,uint256,uint256,uint256,uint256)": FunctionFragment;
    "limitDecrasePosition(address,address,bool,uint256,uint256,uint256,uint256)": FunctionFragment;
    "limitIncreaseAndDecreasePosition(address,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "limitIncreaseAndDecreasePositionETH(address,address,bool,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "limitIncreasePosition(address,address,bool,uint256,uint256,uint256,uint256)": FunctionFragment;
    "limitIncreasePositionETH(address,address,bool,uint256,uint256,uint256,uint256)": FunctionFragment;
    "liquidatePosition(address,address,address,bool)": FunctionFragment;
    "swapPool()": FunctionFragment;
    "tradeStakeUpdater()": FunctionFragment;
    "weth()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "bulkCancelOrder",
    values: [BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkLimitOrderExecable",
    values: [string[], BigNumberish[], string[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "bulkLiquidatePosition",
    values: [string[], string[], string[], boolean[]]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelDecreaseOrder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "cancelIncreaseOrder",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseMargin",
    values: [string, string, boolean, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "decreaseMarginETH",
    values: [string, string, boolean, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "decreasePosition",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "decreasePositionETH",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "execDecreaseOrder",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "execIncreaseOrder",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "future", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "futureLimit",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getLimitMinExecFee",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "increaseInsuranceFund",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseMargin",
    values: [string, string, string, boolean, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increaseMarginETH",
    values: [string, string, boolean, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "increasePosition",
    values: [
      string,
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "increasePositionETH",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "limitDecrasePosition",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "limitIncreaseAndDecreasePosition",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "limitIncreaseAndDecreasePositionETH",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "limitIncreasePosition",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "limitIncreasePositionETH",
    values: [
      string,
      string,
      boolean,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidatePosition",
    values: [string, string, string, boolean]
  ): string;
  encodeFunctionData(functionFragment: "swapPool", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "tradeStakeUpdater",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "weth", values?: undefined): string;

  decodeFunctionResult(
    functionFragment: "bulkCancelOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkLimitOrderExecable",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bulkLiquidatePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelDecreaseOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "cancelIncreaseOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseMargin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreaseMarginETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreasePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "decreasePositionETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "execDecreaseOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "execIncreaseOrder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "future", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "futureLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLimitMinExecFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseInsuranceFund",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseMargin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increaseMarginETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increasePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "increasePositionETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "limitDecrasePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "limitIncreaseAndDecreasePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "limitIncreaseAndDecreasePositionETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "limitIncreasePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "limitIncreasePositionETH",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidatePosition",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "swapPool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "tradeStakeUpdater",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "weth", data: BytesLike): Result;

  events: {};
}

export class FutureRouter extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: FutureRouterInterface;

  functions: {
    bulkCancelOrder(
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    bulkLimitOrderExecable(
      increaseOrderAccounts: string[],
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderAccounts: string[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [boolean[], boolean[]] & {
        increaseOrderExecables: boolean[];
        decreaseOrderExecables: boolean[];
      }
    >;

    bulkLiquidatePosition(
      _collTokens: string[],
      _indexTokens: string[],
      _accounts: string[],
      _isLongs: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelDecreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    cancelIncreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    decreaseMargin(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    decreaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    decreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    decreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    execDecreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    execIncreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    future(overrides?: CallOverrides): Promise<[string]>;

    futureLimit(overrides?: CallOverrides): Promise<[string]>;

    getLimitMinExecFee(overrides?: CallOverrides): Promise<[BigNumber]>;

    increaseInsuranceFund(
      _collateralToken: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    increaseMargin(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    increaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    increasePosition(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    increasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    limitDecrasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _notionalDelta: BigNumberish,
      _minSizeDelta: BigNumberish,
      _maxSizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    limitIncreaseAndDecreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    limitIncreaseAndDecreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    limitIncreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    limitIncreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    liquidatePosition(
      _collateralToken: string,
      _indexToken: string,
      _account: string,
      _isLong: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    swapPool(overrides?: CallOverrides): Promise<[string]>;

    tradeStakeUpdater(overrides?: CallOverrides): Promise<[string]>;

    weth(overrides?: CallOverrides): Promise<[string]>;
  };

  bulkCancelOrder(
    increaseOrderIndexes: BigNumberish[],
    decreaseOrderIndexes: BigNumberish[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  bulkLimitOrderExecable(
    increaseOrderAccounts: string[],
    increaseOrderIndexes: BigNumberish[],
    decreaseOrderAccounts: string[],
    decreaseOrderIndexes: BigNumberish[],
    overrides?: CallOverrides
  ): Promise<
    [boolean[], boolean[]] & {
      increaseOrderExecables: boolean[];
      decreaseOrderExecables: boolean[];
    }
  >;

  bulkLiquidatePosition(
    _collTokens: string[],
    _indexTokens: string[],
    _accounts: string[],
    _isLongs: boolean[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelDecreaseOrder(
    _orderIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  cancelIncreaseOrder(
    _orderIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  decreaseMargin(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _amountOut: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  decreaseMarginETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _amountOut: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  decreasePosition(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _marginDelta: BigNumberish,
    _notionalDelta: BigNumberish,
    _collateralPrice: BigNumberish,
    _indexPrice: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  decreasePositionETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _marginDelta: BigNumberish,
    _notionalDelta: BigNumberish,
    _collateralPrice: BigNumberish,
    _indexPrice: BigNumberish,
    _receiver: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  execDecreaseOrder(
    _account: string,
    _orderIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  execIncreaseOrder(
    _account: string,
    _orderIndex: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  future(overrides?: CallOverrides): Promise<string>;

  futureLimit(overrides?: CallOverrides): Promise<string>;

  getLimitMinExecFee(overrides?: CallOverrides): Promise<BigNumber>;

  increaseInsuranceFund(
    _collateralToken: string,
    _amount: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  increaseMargin(
    _tokenIn: string,
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _amountIn: BigNumberish,
    _minOut: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  increaseMarginETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _minOut: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  increasePosition(
    _tokenIn: string,
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _amountIn: BigNumberish,
    _minOut: BigNumberish,
    _notionalDelta: BigNumberish,
    _collateralPrice: BigNumberish,
    _indexPrice: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  increasePositionETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _minOut: BigNumberish,
    _notionalDelta: BigNumberish,
    _collateralPrice: BigNumberish,
    _indexPrice: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  limitDecrasePosition(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _notionalDelta: BigNumberish,
    _minSizeDelta: BigNumberish,
    _maxSizeDelta: BigNumberish,
    _execFee: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  limitIncreaseAndDecreasePosition(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _increaseMarginDelta: BigNumberish,
    _increaseNotionalDelta: BigNumberish,
    _increaseSizeDelta: BigNumberish,
    _increaseExecFee: BigNumberish,
    _decreaseNotionalDelta: BigNumberish,
    _decreaseMinSizeDelta: BigNumberish,
    _decreaseMaxSizeDelta: BigNumberish,
    _decreaseExecFee: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  limitIncreaseAndDecreasePositionETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _increaseMarginDelta: BigNumberish,
    _increaseNotionalDelta: BigNumberish,
    _increaseSizeDelta: BigNumberish,
    _increaseExecFee: BigNumberish,
    _decreaseNotionalDelta: BigNumberish,
    _decreaseMinSizeDelta: BigNumberish,
    _decreaseMaxSizeDelta: BigNumberish,
    _decreaseExecFee: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  limitIncreasePosition(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _marginDelta: BigNumberish,
    _notionalDelta: BigNumberish,
    _sizeDelta: BigNumberish,
    _execFee: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  limitIncreasePositionETH(
    _collateralToken: string,
    _indexToken: string,
    _isLong: boolean,
    _marginDelta: BigNumberish,
    _notionalDelta: BigNumberish,
    _sizeDelta: BigNumberish,
    _execFee: BigNumberish,
    overrides?: PayableOverrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  liquidatePosition(
    _collateralToken: string,
    _indexToken: string,
    _account: string,
    _isLong: boolean,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  swapPool(overrides?: CallOverrides): Promise<string>;

  tradeStakeUpdater(overrides?: CallOverrides): Promise<string>;

  weth(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    bulkCancelOrder(
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<void>;

    bulkLimitOrderExecable(
      increaseOrderAccounts: string[],
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderAccounts: string[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<
      [boolean[], boolean[]] & {
        increaseOrderExecables: boolean[];
        decreaseOrderExecables: boolean[];
      }
    >;

    bulkLiquidatePosition(
      _collTokens: string[],
      _indexTokens: string[],
      _accounts: string[],
      _isLongs: boolean[],
      overrides?: CallOverrides
    ): Promise<void>;

    cancelDecreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    cancelIncreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    decreaseMargin(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    decreaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    decreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    decreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: CallOverrides
    ): Promise<void>;

    execDecreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    execIncreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    future(overrides?: CallOverrides): Promise<string>;

    futureLimit(overrides?: CallOverrides): Promise<string>;

    getLimitMinExecFee(overrides?: CallOverrides): Promise<BigNumber>;

    increaseInsuranceFund(
      _collateralToken: string,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    increaseMargin(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    increaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    increasePosition(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    increasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    limitDecrasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _notionalDelta: BigNumberish,
      _minSizeDelta: BigNumberish,
      _maxSizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    limitIncreaseAndDecreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    limitIncreaseAndDecreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    limitIncreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    limitIncreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidatePosition(
      _collateralToken: string,
      _indexToken: string,
      _account: string,
      _isLong: boolean,
      overrides?: CallOverrides
    ): Promise<void>;

    swapPool(overrides?: CallOverrides): Promise<string>;

    tradeStakeUpdater(overrides?: CallOverrides): Promise<string>;

    weth(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    bulkCancelOrder(
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    bulkLimitOrderExecable(
      increaseOrderAccounts: string[],
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderAccounts: string[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bulkLiquidatePosition(
      _collTokens: string[],
      _indexTokens: string[],
      _accounts: string[],
      _isLongs: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelDecreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    cancelIncreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    decreaseMargin(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    decreaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    decreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    decreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    execDecreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    execIncreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    future(overrides?: CallOverrides): Promise<BigNumber>;

    futureLimit(overrides?: CallOverrides): Promise<BigNumber>;

    getLimitMinExecFee(overrides?: CallOverrides): Promise<BigNumber>;

    increaseInsuranceFund(
      _collateralToken: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    increaseMargin(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    increaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    increasePosition(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    increasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    limitDecrasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _notionalDelta: BigNumberish,
      _minSizeDelta: BigNumberish,
      _maxSizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    limitIncreaseAndDecreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    limitIncreaseAndDecreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    limitIncreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    limitIncreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    liquidatePosition(
      _collateralToken: string,
      _indexToken: string,
      _account: string,
      _isLong: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    swapPool(overrides?: CallOverrides): Promise<BigNumber>;

    tradeStakeUpdater(overrides?: CallOverrides): Promise<BigNumber>;

    weth(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    bulkCancelOrder(
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    bulkLimitOrderExecable(
      increaseOrderAccounts: string[],
      increaseOrderIndexes: BigNumberish[],
      decreaseOrderAccounts: string[],
      decreaseOrderIndexes: BigNumberish[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bulkLiquidatePosition(
      _collTokens: string[],
      _indexTokens: string[],
      _accounts: string[],
      _isLongs: boolean[],
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelDecreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    cancelIncreaseOrder(
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    decreaseMargin(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    decreaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountOut: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    decreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    decreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      _receiver: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    execDecreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    execIncreaseOrder(
      _account: string,
      _orderIndex: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    future(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    futureLimit(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getLimitMinExecFee(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    increaseInsuranceFund(
      _collateralToken: string,
      _amount: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    increaseMargin(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    increaseMarginETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    increasePosition(
      _tokenIn: string,
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _amountIn: BigNumberish,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    increasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _minOut: BigNumberish,
      _notionalDelta: BigNumberish,
      _collateralPrice: BigNumberish,
      _indexPrice: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    limitDecrasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _notionalDelta: BigNumberish,
      _minSizeDelta: BigNumberish,
      _maxSizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    limitIncreaseAndDecreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    limitIncreaseAndDecreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _increaseMarginDelta: BigNumberish,
      _increaseNotionalDelta: BigNumberish,
      _increaseSizeDelta: BigNumberish,
      _increaseExecFee: BigNumberish,
      _decreaseNotionalDelta: BigNumberish,
      _decreaseMinSizeDelta: BigNumberish,
      _decreaseMaxSizeDelta: BigNumberish,
      _decreaseExecFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    limitIncreasePosition(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    limitIncreasePositionETH(
      _collateralToken: string,
      _indexToken: string,
      _isLong: boolean,
      _marginDelta: BigNumberish,
      _notionalDelta: BigNumberish,
      _sizeDelta: BigNumberish,
      _execFee: BigNumberish,
      overrides?: PayableOverrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    liquidatePosition(
      _collateralToken: string,
      _indexToken: string,
      _account: string,
      _isLong: boolean,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    swapPool(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    tradeStakeUpdater(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    weth(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
