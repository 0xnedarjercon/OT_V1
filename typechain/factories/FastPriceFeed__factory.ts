/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FastPriceFeed, FastPriceFeedInterface } from "../FastPriceFeed";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceDuration",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minBlockInterval",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxDeviationBasisPoints",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_fastPriceEvent",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "BASIS_POINTS_DIVISOR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PRICE_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_BITMASK",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PRICE_PRECISION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fastPriceEvent",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "getPlainPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_refPrice",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isUpdater",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUpdatedBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxDeviationBasisPoints",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxTimeDeviation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minBlockInterval",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_priceBitArray",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "setCompactedPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fastPriceEvent",
        type: "address",
      },
    ],
    name: "setFastPriceEvents",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_lastUpdatedAt",
        type: "uint256",
      },
    ],
    name: "setLastUpdatedAt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxDeviationBasisPoints",
        type: "uint256",
      },
    ],
    name: "setMaxDeviationBasisPoints",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxTimeDeviation",
        type: "uint256",
      },
    ],
    name: "setMaxTimeDeviation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_minBlockInterval",
        type: "uint256",
      },
    ],
    name: "setMinBlockInterval",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "setPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceDuration",
        type: "uint256",
      },
    ],
    name: "setPriceDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_prices",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "setPrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceBits",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "setPricesWithBits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_tokenPrecisions",
        type: "uint256[]",
      },
    ],
    name: "setTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isActive",
        type: "bool",
      },
    ],
    name: "setUpdater",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokenPrecisions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161163738038061163783398101604081905261002f91610111565b610038336100c1565b61070884111561008e5760405162461bcd60e51b815260206004820152601660248201527f696e76616c69645f70726963655f6475726174696f6e00000000000000000000604482015260640160405180910390fd5b600493909355600591909155600755600180546001600160a01b0319166001600160a01b03909216919091179055610160565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121561012757600080fd5b845160208601516040870151606088015192965090945092506001600160a01b038116811461015557600080fd5b939692955090935050565b6114c88061016f6000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c806354aea1271161010f57806395082d25116100a2578063d6a153f111610071578063d6a153f114610411578063f2fde38b14610424578063f67e3bf014610437578063f90ce5ba1461044257600080fd5b806395082d25146103c1578063b3606b56146103d5578063c8390a48146103de578063cfed246b146103f157600080fd5b8063776d16c1116100de578063776d16c114610377578063782661bc1461038a57806382553aad1461039d5780638da5cb5b146103b057600080fd5b806354aea12714610354578063668d3d651461035d578063715018a614610366578063715c75361461036e57600080fd5b80633011e16a1161018757806344c231931161015657806344c23193146102e85780634d11fb4a146102fb5780634f64b2be1461030e5780634fdfb0861461032157600080fd5b80633011e16a1461028e578063318401a5146102a15780633aa08f86146102cc578063449e815d146102d557600080fd5b8063162ac4e0116101c3578063162ac4e01461024257806317398f281461025557806317835d1c146102685780631a1533911461027b57600080fd5b806303cd2571146101f557806303f4d7dc14610211578063126082cf1461022657806314dd2dce1461022f575b600080fd5b6101fe60045481565b6040519081526020015b60405180910390f35b61022461021f3660046110f8565b61044b565b005b6101fe61271081565b61022461023d36600461113d565b610615565b610224610250366004611172565b610644565b6101fe610263366004611172565b610690565b610224610276366004611194565b6106fd565b6102246102893660046111b6565b610736565b61022461029c3660046111f2565b61078b565b6001546102b4906001600160a01b031681565b6040516001600160a01b039091168152602001610208565b6101fe60065481565b6101fe6102e3366004611225565b6107e7565b6102246102f636600461113d565b6108c3565b6101fe61030936600461113d565b61093d565b6102b461031c36600461113d565b61095e565b61034461032f366004611172565b60086020526000908152604090205460ff1681565b6040519015158152602001610208565b6101fe60025481565b6101fe61070881565b610224610988565b6101fe60075481565b61022461038536600461113d565b6109be565b6102246103983660046112b1565b6109ed565b6102246103ab36600461113d565b610ae8565b6000546001600160a01b03166102b4565b6101fe6c0c9f2c9cd04674edea4000000081565b6101fe60055481565b6102246103ec36600461131e565b610b17565b6101fe6103ff366004611172565b60096020526000908152604090205481565b61022461041f36600461113d565b610baa565b610224610432366004611172565b610bd9565b6101fe63ffffffff81565b6101fe60035481565b3360009081526008602052604090205460ff166104835760405162461bcd60e51b815260040161047a90611382565b60405180910390fd5b600061048e82610c74565b9050801561060f576001546001600160a01b031660005b845181101561060c5760008582815181106104c2576104c26113b9565b6020026020010151905060005b60088110156105f7576000816104e68560086113e5565b6104f091906113fc565b600a549091508110610506575050505050505050565b60006105138360206113e5565b905083811c63ffffffff166000600a8561052e8960086113e5565b61053891906113fc565b81548110610548576105486113b9565b60009182526020822001546001600160a01b03169150600b8661056c8a60086113e5565b61057691906113fc565b81548110610586576105866113b9565b60009182526020822001549150816105ab6c0c9f2c9cd04674edea40000000866113e5565b6105b5919061140f565b6001600160a01b038416600090815260096020526040902081905590506105de8a84838f610d91565b50505050505080806105ef90611431565b9150506104cf565b5050808061060490611431565b9150506104a5565b50505b505b5050565b6000546001600160a01b0316331461063f5760405162461bcd60e51b815260040161047a9061144a565b600255565b6000546001600160a01b0316331461066e5760405162461bcd60e51b815260040161047a9061144a565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006004546002546106a291906113fc565b4211156106e15760405162461bcd60e51b815260206004820152600d60248201526c1c1c9a58d957d95e1c1a5c9959609a1b604482015260640161047a565b506001600160a01b031660009081526009602052604090205490565b3360009081526008602052604090205460ff1661072c5760405162461bcd60e51b815260040161047a90611382565b6106118282610e0f565b6000546001600160a01b031633146107605760405162461bcd60e51b815260040161047a9061144a565b6001600160a01b03919091166000908152600860205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146107b55760405162461bcd60e51b815260040161047a9061144a565b6001600160a01b038084166000908152600960205260409020839055600154166107e181858585610d91565b50505050565b60006004546002546107f991906113fc565b4211156108075750806108bd565b6001600160a01b0383166000908152600960205260408120549081900361083157829150506108bd565b826000036108405790506108bd565b600061271060075461271061085591906113fc565b61085f90866113e5565b610869919061140f565b90506000612710600754612710610880919061147f565b61088a90876113e5565b610894919061140f565b90508083101580156108a65750818311155b156108b6578293505050506108bd565b8493505050505b92915050565b6000546001600160a01b031633146108ed5760405162461bcd60e51b815260040161047a9061144a565b6107088111156109385760405162461bcd60e51b815260206004820152601660248201527534b73b30b634b22fb83934b1b2afb23ab930ba34b7b760511b604482015260640161047a565b600455565b600b818154811061094d57600080fd5b600091825260209091200154905081565b600a818154811061096e57600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b031633146109b25760405162461bcd60e51b815260040161047a9061144a565b6109bc6000610f1d565b565b6000546001600160a01b031633146109e85760405162461bcd60e51b815260040161047a9061144a565b600655565b3360009081526008602052604090205460ff16610a1c5760405162461bcd60e51b815260040161047a90611382565b6000610a2782610c74565b905080156107e1576001546001600160a01b031660005b8551811015610ae0576000868281518110610a5b57610a5b6113b9565b60200260200101519050858281518110610a7757610a776113b9565b602002602001015160096000836001600160a01b03166001600160a01b0316815260200190815260200160002081905550610acd8382888581518110610abf57610abf6113b9565b602002602001015188610d91565b5080610ad881611431565b915050610a3e565b505050505050565b6000546001600160a01b03163314610b125760405162461bcd60e51b815260040161047a9061144a565b600755565b6000546001600160a01b03163314610b415760405162461bcd60e51b815260040161047a9061144a565b8051825114610b835760405162461bcd60e51b815260206004820152600e60248201526d0d2dcecc2d8d2c8bed8cadccee8d60931b604482015260640161047a565b8151610b9690600a906020850190610f6d565b50805161060f90600b906020840190610fd2565b6000546001600160a01b03163314610bd45760405162461bcd60e51b815260040161047a9061144a565b600555565b6000546001600160a01b03163314610c035760405162461bcd60e51b815260040161047a9061144a565b6001600160a01b038116610c685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047a565b610c7181610f1d565b50565b60055460009015610cd257600554600354610c8f904361147f565b1015610cd25760405162461bcd60e51b81526020600482015260126024820152711b5a5b97d89b1bd8dad7da5b9d195c9d985b60721b604482015260640161047a565b600654610cdf904261147f565b8211610d225760405162461bcd60e51b815260206004820152601260248201527136b0bc2fba34b6b2afb232bb34b0ba34b7b760711b604482015260640161047a565b600654610d2f90426113fc565b8210610d725760405162461bcd60e51b815260206004820152601260248201527136b0bc2fba34b6b2afb232bb34b0ba34b7b760711b604482015260640161047a565b600254821015610d8457506000919050565b5060025543600355600190565b6001600160a01b038416156107e157604051632f23669960e11b81526001600160a01b0384811660048301526024820184905260448201839052851690635e46cd3290606401600060405180830381600087803b158015610df157600080fd5b505af1158015610e05573d6000803e3d6000fd5b5050505050505050565b6000610e1a82610c74565b9050801561060f576001546001600160a01b031660005b600881101561060c57600a5481908110610e4d57505050505050565b6000610e5a8360206113e5565b9050600063ffffffff8289901c1690506000600a8581548110610e7f57610e7f6113b9565b6000918252602082200154600b80546001600160a01b0390921693509087908110610eac57610eac6113b9565b6000918252602082200154915081610ed16c0c9f2c9cd04674edea40000000866113e5565b610edb919061140f565b6001600160a01b03841660009081526009602052604090208190559050610f048884838d610d91565b5050505050508080610f1590611431565b915050610e31565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054828255906000526020600020908101928215610fc2579160200282015b82811115610fc257825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610f8d565b50610fce92915061100d565b5090565b828054828255906000526020600020908101928215610fc2579160200282015b82811115610fc2578251825591602001919060010190610ff2565b5b80821115610fce576000815560010161100e565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561106157611061611022565b604052919050565b600067ffffffffffffffff82111561108357611083611022565b5060051b60200190565b600082601f83011261109e57600080fd5b813560206110b36110ae83611069565b611038565b82815260059290921b840181019181810190868411156110d257600080fd5b8286015b848110156110ed57803583529183019183016110d6565b509695505050505050565b6000806040838503121561110b57600080fd5b823567ffffffffffffffff81111561112257600080fd5b61112e8582860161108d565b95602094909401359450505050565b60006020828403121561114f57600080fd5b5035919050565b80356001600160a01b038116811461116d57600080fd5b919050565b60006020828403121561118457600080fd5b61118d82611156565b9392505050565b600080604083850312156111a757600080fd5b50508035926020909101359150565b600080604083850312156111c957600080fd5b6111d283611156565b9150602083013580151581146111e757600080fd5b809150509250929050565b60008060006060848603121561120757600080fd5b61121084611156565b95602085013595506040909401359392505050565b6000806040838503121561123857600080fd5b61124183611156565b946020939093013593505050565b600082601f83011261126057600080fd5b813560206112706110ae83611069565b82815260059290921b8401810191818101908684111561128f57600080fd5b8286015b848110156110ed576112a481611156565b8352918301918301611293565b6000806000606084860312156112c657600080fd5b833567ffffffffffffffff808211156112de57600080fd5b6112ea8783880161124f565b9450602086013591508082111561130057600080fd5b5061130d8682870161108d565b925050604084013590509250925092565b6000806040838503121561133157600080fd5b823567ffffffffffffffff8082111561134957600080fd5b6113558683870161124f565b9350602085013591508082111561136b57600080fd5b506113788582860161108d565b9150509250929050565b60208082526019908201527f666173745f70726963655f666565645f666f7262696465656e00000000000000604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820281158282048414176108bd576108bd6113cf565b808201808211156108bd576108bd6113cf565b60008261142c57634e487b7160e01b600052601260045260246000fd5b500490565b600060018201611443576114436113cf565b5060010190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b818103818111156108bd576108bd6113cf56fea2646970667358221220573765c49b5577abc85bb6b7c9438dc1ce57d5e4030bfe7a47bd3f70a5bfda2464736f6c63430008110033";

export class FastPriceFeed__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _priceDuration: BigNumberish,
    _minBlockInterval: BigNumberish,
    _maxDeviationBasisPoints: BigNumberish,
    _fastPriceEvent: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastPriceFeed> {
    return super.deploy(
      _priceDuration,
      _minBlockInterval,
      _maxDeviationBasisPoints,
      _fastPriceEvent,
      overrides || {}
    ) as Promise<FastPriceFeed>;
  }
  getDeployTransaction(
    _priceDuration: BigNumberish,
    _minBlockInterval: BigNumberish,
    _maxDeviationBasisPoints: BigNumberish,
    _fastPriceEvent: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _priceDuration,
      _minBlockInterval,
      _maxDeviationBasisPoints,
      _fastPriceEvent,
      overrides || {}
    );
  }
  attach(address: string): FastPriceFeed {
    return super.attach(address) as FastPriceFeed;
  }
  connect(signer: Signer): FastPriceFeed__factory {
    return super.connect(signer) as FastPriceFeed__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastPriceFeedInterface {
    return new utils.Interface(_abi) as FastPriceFeedInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastPriceFeed {
    return new Contract(address, _abi, signerOrProvider) as FastPriceFeed;
  }
}
