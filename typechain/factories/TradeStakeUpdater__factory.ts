/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TradeStakeUpdater,
  TradeStakeUpdaterInterface,
} from "../TradeStakeUpdater";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_future",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tradeStake",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "OSD_PRICE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_indexToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_notionalDelta",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "decreasePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "future",
    outputs: [
      {
        internalType: "contract IFuture",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_indexToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_notionalDelta",
        type: "uint256",
      },
    ],
    name: "increasePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_indexToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isLong",
        type: "bool",
      },
    ],
    name: "liquidatePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "osd",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_approve",
        type: "bool",
      },
    ],
    name: "setCaller",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swap",
    outputs: [
      {
        internalType: "contract ISwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapIn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenIn",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenOut",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapOut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeStake",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001cf838038062001cf883398101604081905262000034916200017e565b6200003f3362000111565b600180546001600160a01b0319166001600160a01b0386169081179091556040805163f6da905760e01b8152905163f6da9057916004808201926020929091908290030181865afa15801562000099573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000bf9190620001db565b600380546001600160a01b03199081166001600160a01b039384161790915560048054821695831695909517909455600280548516938216939093179092556005805490931691161790555062000200565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200017957600080fd5b919050565b600080600080608085870312156200019557600080fd5b620001a08562000161565b9350620001b06020860162000161565b9250620001c06040860162000161565b9150620001d06060860162000161565b905092959194509250565b600060208284031215620001ee57600080fd5b620001f98262000161565b9392505050565b611ae880620002106000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639cae6eae11610097578063dab8a65411610066578063dab8a654146101e3578063f2fde38b146101f6578063f6da905714610209578063f8933e931461021c57600080fd5b80639cae6eae14610197578063a2ec258f146101aa578063c7052f05146101bd578063d2b6dac3146101d057600080fd5b8063741bef1a116100d3578063741bef1a146101355780638119c0651461016057806386385699146101735780638da5cb5b1461018657600080fd5b806311eaa609146100fa57806336e3f6d714610118578063715018a61461012d575b600080fd5b6101056305f5e10081565b6040519081526020015b60405180910390f35b61012b6101263660046115e1565b61022f565b005b61012b610480565b600454610148906001600160a01b031681565b6040516001600160a01b03909116815260200161010f565b600154610148906001600160a01b031681565b61012b610181366004611665565b6104b6565b6000546001600160a01b0316610148565b61012b6101a53660046116cc565b6105d2565b600254610148906001600160a01b031681565b600554610148906001600160a01b031681565b61012b6101de366004611665565b610627565b61012b6101f1366004611705565b6106b9565b61012b610204366004611769565b6108c7565b600354610148906001600160a01b031681565b61012b61022a36600461178d565b610962565b3360009081526006602052604090205460ff166102675760405162461bcd60e51b815260040161025e906117e9565b60405180910390fd5b60025460405163031d418360e51b81526001600160a01b038981166004830152888116602483015260009216906363a8306090604401602060405180830381865afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de919061180d565b600254604051630812bac760e41b815260048101839052919250600091633b9aca009186916001600160a01b039091169063812bac7090602401602060405180830381865afa158015610335573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610359919061180d565b610363919061183c565b61036d9190611853565b600154604051635fd90dbb60e11b81526001600160a01b038c811660048301529293506000928392169063bfb21b76906024016040805180830381865afa1580156103bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e09190611875565b90925090506000821561040957826103f8838661183c565b6104029190611853565b905061040c565b50825b6005546040516319765dc960e21b81526001600160a01b038c8116600483015260248201849052909116906365d9772490604401600060405180830381600087803b15801561045a57600080fd5b505af115801561046e573d6000803e3d6000fd5b50505050505050505050505050505050565b6000546001600160a01b031633146104aa5760405162461bcd60e51b815260040161025e90611899565b6104b46000610ad4565b565b808015806104c45750428110155b6104fa5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b604482015260640161025e565b3360009081526006602052604090205460ff166105295760405162461bcd60e51b815260040161025e906117e9565b600080610537898989610b24565b9150915060006105488a8a85610c19565b6005549091506001600160a01b03166365d977248761056784866118ce565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044015b600060405180830381600087803b1580156105ae57600080fd5b505af11580156105c2573d6000803e3d6000fd5b5050505050505050505050505050565b6000546001600160a01b031633146105fc5760405162461bcd60e51b815260040161025e90611899565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b808015806106355750428110155b61066b5760405162461bcd60e51b81526020600482015260076024820152661156141254915160ca1b604482015260640161025e565b3360009081526006602052604090205460ff1661069a5760405162461bcd60e51b815260040161025e906117e9565b6000806106a8898988610cfb565b9150915060006105488a8a85610dad565b3360009081526006602052604090205460ff166106e85760405162461bcd60e51b815260040161025e906117e9565b60025460405163031d418360e51b81526001600160a01b038781166004830152868116602483015260009216906363a8306090604401602060405180830381865afa15801561073b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061075f919061180d565b600254604051630812bac760e41b815260048101839052919250600091633b9aca009185916001600160a01b039091169063812bac70906024015b602060405180830381865afa1580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db919061180d565b6107e5919061183c565b6107ef9190611853565b600154604051635fd90dbb60e11b81526001600160a01b038a811660048301529293506000928392169063bfb21b76906024016040805180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108629190611875565b90925090506000821561088b578261087a838661183c565b6108849190611853565b905061088e565b50825b6005546040516319765dc960e21b81526001600160a01b038a8116600483015260248201849052909116906365d9772490604401610594565b6000546001600160a01b031633146108f15760405162461bcd60e51b815260040161025e90611899565b6001600160a01b0381166109565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161025e565b61095f81610ad4565b50565b3360009081526006602052604090205460ff166109915760405162461bcd60e51b815260040161025e906117e9565b60025460405163031d418360e51b81526001600160a01b038681166004830152858116602483015260009216906363a8306090604401602060405180830381865afa1580156109e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a08919061180d565b600254604051634a3f088d60e01b81526001600160a01b03888116600483015287811660248301528681166044830152851515606483015292935060009290911690634a3f088d90608401608060405180830381865afa158015610a70573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9491906118e1565b5050600254604051630812bac760e41b81526004810186905291935060009250633b9aca009184916001600160a01b03169063812bac709060240161079a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6003546000908190819081906001600160a01b0390811690881603610b4e57508390506000610c0d565b60015460405163027d432f60e31b81526001600160a01b03888116600483015260009283929116906313ea19789060240160c060405180830381865afa158015610b9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bc0919061193f565b5094505050509150600080610bd68b858b610e95565b909650869250905060006064610bef60ff86168461183c565b610bf99190611853565b9050610c0581836119ac565b955050505050505b90969095509350505050565b60035460009081906001600160a01b0390811690851603610c3c57506000610cf3565b60015460405163027d432f60e31b81526001600160a01b03878116600483015260009283929116906313ea19789060240160c060405180830381865afa158015610c8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cae919061193f565b50945050505091506000610cc3878488611069565b905060006064610cd660ff85168461183c565b610ce09190611853565b9050610cec81836119ac565b9450505050505b949350505050565b6003546000908190819081906001600160a01b0390811690871603610d2557508390506000610c0d565b60015460405163027d432f60e31b81526001600160a01b03898116600483015260009283929116906313ea19789060240160c060405180830381865afa158015610d73573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d97919061193f565b5094505050509150600080610bd68a858b611121565b600354600090819081906001600160a01b0390811690871603610dd557508290506000610e8c565b60015460405163027d432f60e31b81526001600160a01b03878116600483015260009283929116906313ea19789060240160c060405180830381865afa158015610e23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e47919061193f565b50945050505091506000610e5c8984896112ee565b905060006064610e6f60ff85168461183c565b610e799190611853565b9050610e8581836119ac565b9450505050505b95945050505050565b60015460405163058dd4cd60e31b81526001600160a01b0385811660048301526000928392839283921690632c6ea66890602401608060405180830381865afa158015610ee6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0a91906118e1565b505060015460405162d7f52760e31b81526001600160a01b038b8116600483015293955091935060009216906306bfa93890602401608060405180830381865afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f8091906119bf565b93505050506000610f9d848484610f978d8761139b565b8b611481565b60015460405163bff851ab60e01b81526001600160a01b038c811660048301529293506000929091169063bff851ab90602401606060405180830381865afa158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110119190611a09565b90506000818a60ff166003811061102a5761102a611a9c565b602002015161ffff169050620186a0611043828561183c565b61104d9190611853565b965061105987846119ac565b9750505050505050935093915050565b60015460405163bff851ab60e01b81526001600160a01b038581166004830152600092839291169063bff851ab90602401606060405180830381865afa1580156110b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110db9190611a09565b90506000818560ff16600381106110f4576110f4611a9c565b602002015161ffff169050620186a061110d828661183c565b6111179190611853565b9695505050505050565b60015460405163058dd4cd60e31b81526001600160a01b0385811660048301526000928392839283921690632c6ea66890602401608060405180830381865afa158015611172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119691906118e1565b505060015460405162d7f52760e31b81526001600160a01b038b8116600483015293955091935060009216906306bfa93890602401608060405180830381865afa1580156111e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061120c91906119bf565b935050505060006112298484846112238d8761139b565b8b6114e7565b60015460405163bff851ab60e01b81526001600160a01b038c811660048301529293506000929091169063bff851ab90602401606060405180830381865afa158015611279573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129d9190611a09565b90506000818a60ff16600381106112b6576112b6611a9c565b602002015161ffff1690506112ce81620186a06119ac565b6112d8828561183c565b6112e29190611853565b965061105987846118ce565b60015460405163bff851ab60e01b81526001600160a01b038581166004830152600092839291169063bff851ab90602401606060405180830381865afa15801561133c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113609190611a09565b90506000818560ff166003811061137957611379611a9c565b602002015161ffff16905061139181620186a06119ac565b61110d828661183c565b6003546000906001600160a01b03908116908416036113bf57506305f5e10061147b565b816113cc5750600061147b565b600480546040516341976e0960e01b81526001600160a01b03868116938201939093529116906341976e0990602401602060405180830381865afa158015611418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061143c919061180d565b90506000811161147b5760405162461bcd60e51b815260206004820152600a60248201526950524943455f5a45524f60b01b604482015260640161025e565b92915050565b600083156114dc57600083116114c65760405162461bcd60e51b815260206004820152600a60248201526970726963655f7a65726f60b01b604482015260640161025e565b6114d5836305f5e10084611537565b9050610e8c565b61111786868461154e565b6000831561152c57600083116114c65760405162461bcd60e51b815260206004820152600a60248201526970726963655f7a65726f60b01b604482015260640161025e565b61111786868461158c565b600082611544858461183c565b610cf39190611853565b60008061155b83866118ce565b905060008161156a868861183c565b6115749190611853565b905080600003611582575060015b61111781866119ac565b60008061159983866119ac565b90506000816115a8868861183c565b6115b29190611853565b905061111785826119ac565b6001600160a01b038116811461095f57600080fd5b801515811461095f57600080fd5b600080600080600080600060e0888a0312156115fc57600080fd5b8735611607816115be565b96506020880135611617816115be565b95506040880135611627816115be565b94506060880135611637816115d3565b93506080880135925060a0880135915060c0880135611655816115be565b8091505092959891949750929550565b60008060008060008060c0878903121561167e57600080fd5b8635611689816115be565b95506020870135611699816115be565b9450604087013593506060870135925060808701356116b7816115be565b8092505060a087013590509295509295509295565b600080604083850312156116df57600080fd5b82356116ea816115be565b915060208301356116fa816115d3565b809150509250929050565b600080600080600060a0868803121561171d57600080fd5b8535611728816115be565b94506020860135611738816115be565b93506040860135611748816115be565b92506060860135611758816115d3565b949793965091946080013592915050565b60006020828403121561177b57600080fd5b8135611786816115be565b9392505050565b600080600080608085870312156117a357600080fd5b84356117ae816115be565b935060208501356117be816115be565b925060408501356117ce816115be565b915060608501356117de816115d3565b939692955090935050565b6020808252600a908201526937b7363ca1b0b63632b960b11b604082015260600190565b60006020828403121561181f57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761147b5761147b611826565b60008261187057634e487b7160e01b600052601260045260246000fd5b500490565b6000806040838503121561188857600080fd5b505080516020909101519092909150565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8082018082111561147b5761147b611826565b600080600080608085870312156118f757600080fd5b505082516020840151604085015160609095015191969095509092509050565b805160ff8116811461192857600080fd5b919050565b805161ffff8116811461192857600080fd5b60008060008060008060c0878903121561195857600080fd5b61196187611917565b955061196f6020880161192d565b945061197d6040880161192d565b935061198b6060880161192d565b925061199960808801611917565b915060a087015190509295509295509295565b8181038181111561147b5761147b611826565b600080600080608085870312156119d557600080fd5b84516119e0816115be565b6020860151604087015191955093506119f8816115d3565b60608601519092506117de816115d3565b600060608284031215611a1b57600080fd5b82601f830112611a2a57600080fd5b6040516060810181811067ffffffffffffffff82111715611a5b57634e487b7160e01b600052604160045260246000fd5b604052806060840185811115611a7057600080fd5b845b81811015611a9157611a838161192d565b835260209283019201611a72565b509195945050505050565b634e487b7160e01b600052603260045260246000fdfea2646970667358221220d874e28137d7fbdd0d36a2a34454c519c4ae0e46fd67c469b3a0d8715777d75564736f6c63430008110033";

export class TradeStakeUpdater__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _swap: string,
    _priceFeed: string,
    _future: string,
    _tradeStake: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TradeStakeUpdater> {
    return super.deploy(
      _swap,
      _priceFeed,
      _future,
      _tradeStake,
      overrides || {}
    ) as Promise<TradeStakeUpdater>;
  }
  getDeployTransaction(
    _swap: string,
    _priceFeed: string,
    _future: string,
    _tradeStake: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _swap,
      _priceFeed,
      _future,
      _tradeStake,
      overrides || {}
    );
  }
  attach(address: string): TradeStakeUpdater {
    return super.attach(address) as TradeStakeUpdater;
  }
  connect(signer: Signer): TradeStakeUpdater__factory {
    return super.connect(signer) as TradeStakeUpdater__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TradeStakeUpdaterInterface {
    return new utils.Interface(_abi) as TradeStakeUpdaterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TradeStakeUpdater {
    return new Contract(address, _abi, signerOrProvider) as TradeStakeUpdater;
  }
}
