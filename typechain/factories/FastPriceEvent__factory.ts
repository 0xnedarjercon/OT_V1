/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FastPriceEvent,
  FastPriceEventInterface,
} from "../FastPriceEvent";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "priceFeed",
        type: "address",
      },
    ],
    name: "PriceUpdate",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timestamp",
        type: "uint256",
      },
    ],
    name: "emitPriceEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isPriceFeed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isPriceFeed",
        type: "bool",
      },
    ],
    name: "setIsPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104358061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806357a94beb146100675780635e46cd321461009f57806369d4c924146100b4578063715018a6146100c75780638da5cb5b146100cf578063f2fde38b146100ea575b600080fd5b61008a610075366004610339565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100b26100ad36600461035b565b6100fd565b005b6100b26100c236600461038e565b6101a7565b6100b26101fc565b6000546040516001600160a01b039091168152602001610096565b6100b26100f8366004610339565b610232565b3360009081526001602052604090205460ff166101525760405162461bcd60e51b815260206004820152600e60248201526d34b73b30b634b22fb9b2b73232b960911b60448201526064015b60405180910390fd5b604080516001600160a01b0385168152602081018490529081018290523360608201527fcde36e9e85908d0afbb3048fb21aa1c34995c73328a8116b741c0e34d5fdfcb29060800160405180910390a1505050565b6000546001600160a01b031633146101d15760405162461bcd60e51b8152600401610149906103ca565b6001600160a01b03919091166000908152600160205260409020805460ff1916911515919091179055565b6000546001600160a01b031633146102265760405162461bcd60e51b8152600401610149906103ca565b61023060006102cd565b565b6000546001600160a01b0316331461025c5760405162461bcd60e51b8152600401610149906103ca565b6001600160a01b0381166102c15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610149565b6102ca816102cd565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461033457600080fd5b919050565b60006020828403121561034b57600080fd5b6103548261031d565b9392505050565b60008060006060848603121561037057600080fd5b6103798461031d565b95602085013595506040909401359392505050565b600080604083850312156103a157600080fd5b6103aa8361031d565b9150602083013580151581146103bf57600080fd5b809150509250929050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122011d6816b7031307157585f419811ffe1e8829c04c9baa5943c537f5e4288a09a64736f6c63430008110033";

export class FastPriceEvent__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FastPriceEvent> {
    return super.deploy(overrides || {}) as Promise<FastPriceEvent>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FastPriceEvent {
    return super.attach(address) as FastPriceEvent;
  }
  connect(signer: Signer): FastPriceEvent__factory {
    return super.connect(signer) as FastPriceEvent__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FastPriceEventInterface {
    return new utils.Interface(_abi) as FastPriceEventInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FastPriceEvent {
    return new Contract(address, _abi, signerOrProvider) as FastPriceEvent;
  }
}
