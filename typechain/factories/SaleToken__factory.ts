/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SaleToken, SaleTokenInterface } from "../SaleToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_saleToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_approver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_endAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_saleTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_marketValue",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "_supportStableCoin",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "adminIsWithDraw",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenAmount",
        type: "uint256",
      },
    ],
    name: "buyToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "getAccountInfo",
    outputs: [
      {
        internalType: "address",
        name: "saleTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "saleTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleVolume",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userBuyTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "tokensUserAmount",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "tokensGlobalAmount",
        type: "uint256[]",
      },
      {
        internalType: "uint8[]",
        name: "tokensDecimals",
        type: "uint8[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "saleInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "saleToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleTokenAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "marketValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "saleVolume",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "settleSaleToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "supportStableCoin",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportStableCoinExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportStableCoinSaleNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPosition",
    outputs: [
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isWithdraw",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userPositonStable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001828380380620018288339810160408190526200003491620002e5565b6200003f3362000262565b844210620000945760405162461bcd60e51b815260206004820152601360248201527f53746172744174206d757374206675747572650000000000000000000000000060448201526064015b60405180910390fd5b838510620000e55760405162461bcd60e51b815260206004820152601560248201527f456e644174206d7573742067742053746172744174000000000000000000000060448201526064016200008b565b600180546001600160a01b03808a166001600160a01b03199283161790925560028054928916929091169190911790556003859055600484905560058390556200013d826c0c9f2c9cd04674edea400000006200041e565b600655600a805460ff1916905560005b8151811015620002545760088282815181106200016e576200016e6200043e565b6020908102919091018101518254600181018455600093845291832090910180546001600160a01b0319166001600160a01b039092169190911790558251600b908290859085908110620001c657620001c66200043e565b60200260200101516001600160a01b03166001600160a01b03168152602001908152602001600020819055506001600960008484815181106200020d576200020d6200043e565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff1916911515919091179055806200024b8162000454565b9150506200014d565b505050505050505062000470565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620002ca57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600080600060e0888a0312156200030157600080fd5b6200030c88620002b2565b965060206200031d818a01620002b2565b60408a015160608b015160808c015160a08d015160c08e0151949b50929950909750955093506001600160401b03808211156200035957600080fd5b818b0191508b601f8301126200036e57600080fd5b815181811115620003835762000383620002cf565b8060051b604051601f19603f83011681018181108582111715620003ab57620003ab620002cf565b60405291825284820192508381018501918e831115620003ca57600080fd5b938501935b82851015620003f357620003e385620002b2565b84529385019392850192620003cf565b80965050505050505092959891949750929550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762000438576200043862000408565b92915050565b634e487b7160e01b600052603260045260246000fd5b60006001820162000469576200046962000408565b5060010190565b6113a880620004806000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638da5cb5b1161008c578063ca628c7811610066578063ca628c7814610282578063ee26eed11461028a578063f2fde38b146102c9578063fc36780b146102dc57600080fd5b80638da5cb5b146101d85780638e3695b8146101e95780639d88d0ab1461025757600080fd5b80636e83ed3b116100c85780636e83ed3b14610162578063715018a6146101755780637503598b1461017d5780637b510fe8146101b057600080fd5b806329a80d86146100ef57806363c072f51461011f57806368f8fc101461014d575b600080fd5b6101026100fd366004610ef8565b6102e9565b6040516001600160a01b0390911681526020015b60405180910390f35b61013f61012d366004610f2d565b600b6020526000908152604090205481565b604051908152602001610116565b61016061015b366004610f48565b610313565b005b610160610170366004610f2d565b610509565b6101606106d4565b6101a061018b366004610f2d565b60096020526000908152604090205460ff1681565b6040519015158152602001610116565b6101c36101be366004610f2d565b61070a565b60405161011699989796959493929190610fe0565b6000546001600160a01b0316610102565b600154600254600354600454600554600654600754610217966001600160a01b039081169616949392919087565b604080516001600160a01b039889168152979096166020880152948601939093526060850191909152608084015260a083015260c082015260e001610116565b61013f610265366004611099565b600d60209081526000928352604080842090915290825290205481565b610160610a2a565b6102b4610298366004610f2d565b600c602052600090815260409020805460019091015460ff1682565b60408051928352901515602083015201610116565b6101606102d7366004610f2d565b610b53565b600a546101a09060ff1681565b600881815481106102f957600080fd5b6000918252602090912001546001600160a01b0316905081565b60035442118015610325575060045442105b6103675760405162461bcd60e51b815260206004820152600e60248201526d6f6e6c79417453616c6554696d6560901b60448201526064015b60405180910390fd5b6001600160a01b03821660009081526009602052604090205460ff166103c35760405162461bcd60e51b8152602060048201526011602482015270151bdad95b881b9bdd081cdd5c1c1bdc9d607a1b604482015260640161035e565b6103d86001600160a01b038316333084610bee565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610418573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061043c91906110cc565b61044790601e611105565b61045290600a611208565b61045c9083611217565b336000908152600c602052604081208054929350839290919061048090849061122e565b90915550506007805482919060009061049a90849061122e565b9091555050336000908152600d602090815260408083206001600160a01b0387168452909152812080548492906104d290849061122e565b90915550506001600160a01b0383166000908152600b6020526040812080548492906104ff90849061122e565b9091555050505050565b600454421161054a5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c794174456e6454696d6560981b604482015260640161035e565b6000546001600160a01b031633146105745760405162461bcd60e51b815260040161035e90611241565b600a5460ff16156105c75760405162461bcd60e51b815260206004820152601a60248201527f41646d696e206861766520616c72656164207769746864726177000000000000604482015260640161035e565b600a805460ff1916600117905560005b6008548110156106d057600881815481106105f4576105f4611276565b6000918252602082200154600880546001600160a01b039092169263a9059cbb928692600b92918790811061062b5761062b611276565b6000918252602080832091909101546001600160a01b039081168452908301939093526040918201902054905160e085901b6001600160e01b031916815292909116600483015260248201526044016020604051808303816000875af1158015610699573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106bd919061128c565b50806106c8816112ae565b9150506105d7565b5050565b6000546001600160a01b031633146106fe5760405162461bcd60e51b815260040161035e90611241565b6107086000610c4e565b565b6001546005546006546007546001600160a01b039093169260006060808080848787111561073b5750600754610740565b506006545b6005546001600160a01b038c166000908152600c6020526040902054829161076791611217565b61077191906112c7565b60085490965067ffffffffffffffff81111561078f5761078f6112e9565b6040519080825280602002602001820160405280156107b8578160200160208202803683370190505b5060085490955067ffffffffffffffff8111156107d7576107d76112e9565b604051908082528060200260200182016040528015610800578160200160208202803683370190505b5060085490945067ffffffffffffffff81111561081f5761081f6112e9565b604051908082528060200260200182016040528015610848578160200160208202803683370190505b5060085490935067ffffffffffffffff811115610867576108676112e9565b604051908082528060200260200182016040528015610890578160200160208202803683370190505b50915060005b600854811015610a1b576000600882815481106108b5576108b5611276565b9060005260206000200160009054906101000a90046001600160a01b03169050808783815181106108e8576108e8611276565b6001600160a01b039283166020918202929092018101919091528e82166000908152600d825260408082209385168252929091522054865187908490811061093257610932611276565b602002602001018181525050600b6000826001600160a01b03166001600160a01b031681526020019081526020016000205485838151811061097657610976611276565b602002602001018181525050806001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e491906110cc565b8483815181106109f6576109f6611276565b60ff909216602092830291909101909101525080610a13816112ae565b915050610896565b50509193959799909294969850565b6004544211610a6b5760405162461bcd60e51b815260206004820152600d60248201526c6f6e6c794174456e6454696d6560981b604482015260640161035e565b336000908152600c602052604090206001015460ff1615610ace5760405162461bcd60e51b815260206004820152601d60248201527f4163636f756e74206861766520616c7265616479207769746864726177000000604482015260640161035e565b336000908152600c602052604081206001908101805460ff191690911790556006546007541115610b025750600754610b07565b506006545b600554336000908152600c602052604081205490918391610b289190611217565b610b3291906112c7565b6002546001549192506106d0916001600160a01b0390811691163384610bee565b6000546001600160a01b03163314610b7d5760405162461bcd60e51b815260040161035e90611241565b6001600160a01b038116610be25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161035e565b610beb81610c4e565b50565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b179052610c48908590610c9e565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610cf3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d759092919063ffffffff16565b805190915015610d705780806020019051810190610d11919061128c565b610d705760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161035e565b505050565b6060610d848484600085610d8e565b90505b9392505050565b606082471015610def5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161035e565b6001600160a01b0385163b610e465760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161035e565b600080866001600160a01b03168587604051610e629190611323565b60006040518083038185875af1925050503d8060008114610e9f576040519150601f19603f3d011682016040523d82523d6000602084013e610ea4565b606091505b5091509150610eb4828286610ebf565b979650505050505050565b60608315610ece575081610d87565b825115610ede5782518084602001fd5b8160405162461bcd60e51b815260040161035e919061133f565b600060208284031215610f0a57600080fd5b5035919050565b80356001600160a01b0381168114610f2857600080fd5b919050565b600060208284031215610f3f57600080fd5b610d8782610f11565b60008060408385031215610f5b57600080fd5b610f6483610f11565b946020939093013593505050565b600081518084526020808501945080840160005b83811015610fa257815187529582019590820190600101610f86565b509495945050505050565b600081518084526020808501945080840160005b83811015610fa257815160ff1687529582019590820190600101610fc1565b6001600160a01b038a8116825260208083018b9052604083018a9052606083018990526080830188905261012060a08401819052875190840181905260009261014085019289810192855b8181101561104957845184168652948201949382019360010161102b565b505050505082810360c08401526110608187610f72565b905082810360e08401526110748186610f72565b90508281036101008401526110898185610fad565b9c9b505050505050505050505050565b600080604083850312156110ac57600080fd5b6110b583610f11565b91506110c360208401610f11565b90509250929050565b6000602082840312156110de57600080fd5b815160ff81168114610d8757600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561111e5761111e6110ef565b92915050565b600181815b8085111561115f578160001904821115611145576111456110ef565b8085161561115257918102915b93841c9390800290611129565b509250929050565b6000826111765750600161111e565b816111835750600061111e565b816001811461119957600281146111a3576111bf565b600191505061111e565b60ff8411156111b4576111b46110ef565b50506001821b61111e565b5060208310610133831016604e8410600b84101617156111e2575081810a61111e565b6111ec8383611124565b8060001904821115611200576112006110ef565b029392505050565b6000610d8760ff841683611167565b808202811582820484141761111e5761111e6110ef565b8082018082111561111e5761111e6110ef565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561129e57600080fd5b81518015158114610d8757600080fd5b6000600182016112c0576112c06110ef565b5060010190565b6000826112e457634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b60005b8381101561131a578181015183820152602001611302565b50506000910152565b600082516113358184602087016112ff565b9190910192915050565b602081526000825180602084015261135e8160408501602087016112ff565b601f01601f1916919091016040019291505056fea2646970667358221220c6f17788e21a87c3d9b63349d679f345abf3201ee8f408cb8571166de43f58a364736f6c63430008110033";

export class SaleToken__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _saleToken: string,
    _approver: string,
    _startAt: BigNumberish,
    _endAt: BigNumberish,
    _saleTokenAmount: BigNumberish,
    _marketValue: BigNumberish,
    _supportStableCoin: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SaleToken> {
    return super.deploy(
      _saleToken,
      _approver,
      _startAt,
      _endAt,
      _saleTokenAmount,
      _marketValue,
      _supportStableCoin,
      overrides || {}
    ) as Promise<SaleToken>;
  }
  getDeployTransaction(
    _saleToken: string,
    _approver: string,
    _startAt: BigNumberish,
    _endAt: BigNumberish,
    _saleTokenAmount: BigNumberish,
    _marketValue: BigNumberish,
    _supportStableCoin: string[],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _saleToken,
      _approver,
      _startAt,
      _endAt,
      _saleTokenAmount,
      _marketValue,
      _supportStableCoin,
      overrides || {}
    );
  }
  attach(address: string): SaleToken {
    return super.attach(address) as SaleToken;
  }
  connect(signer: Signer): SaleToken__factory {
    return super.connect(signer) as SaleToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SaleTokenInterface {
    return new utils.Interface(_abi) as SaleTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SaleToken {
    return new Contract(address, _abi, signerOrProvider) as SaleToken;
  }
}
