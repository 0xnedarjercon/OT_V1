/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MyERC20, MyERC20Interface } from "../MyERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "dec",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "minters",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526005805460ff60a01b1916600960a11b1790553480156200002457600080fd5b5060405162001372380380620013728339810160408190526200004791620002d9565b82826003620000578382620003ec565b506004620000668282620003ec565b505050620000836200007d620000d160201b60201c565b620000d5565b620000aa337a026dade1c5a61a7bbb4a2f80703bf718583f0d700000000000000062000127565b6005805460ff909216600160a01b0260ff60a01b1990921691909117905550620004e09050565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001825760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001969190620004b8565b90915550506001600160a01b03821660009081526020819052604081208054839290620001c5908490620004b8565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200023c57600080fd5b81516001600160401b038082111562000259576200025962000214565b604051601f8301601f19908116603f0116810190828211818310171562000284576200028462000214565b81604052838152602092508683858801011115620002a157600080fd5b600091505b83821015620002c55785820183015181830184015290820190620002a6565b600093810190920192909252949350505050565b600080600060608486031215620002ef57600080fd5b83516001600160401b03808211156200030757600080fd5b62000315878388016200022a565b945060208601519150808211156200032c57600080fd5b506200033b868287016200022a565b925050604084015160ff811681146200035357600080fd5b809150509250925092565b600181811c908216806200037357607f821691505b6020821081036200039457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020f57600081815260208120601f850160051c81016020861015620003c35750805b601f850160051c820191505b81811015620003e457828155600101620003cf565b505050505050565b81516001600160401b0381111562000408576200040862000214565b62000420816200041984546200035e565b846200039a565b602080601f8311600181146200045857600084156200043f5750858301515b600019600386901b1c1916600185901b178555620003e4565b600085815260208120601f198616915b82811015620004895788860151825594840194600190910190840162000468565b5085821015620004a85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620004da57634e487b7160e01b600052601160045260246000fd5b92915050565b610e8280620004f06000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063a9059cbb11610071578063a9059cbb14610242578063cf456ae714610255578063dd62ed3e14610268578063f2fde38b1461027b578063f46eccc41461028e57600080fd5b80638da5cb5b146101f957806395d89b41146102145780639dc29fac1461021c578063a457c2d71461022f57600080fd5b8063313ce567116100e9578063313ce5671461018157806339509351146101a057806340c10f19146101b357806370a08231146101c6578063715018a6146101ef57600080fd5b806306fdde031461011b578063095ea7b31461013957806318160ddd1461015c57806323b872dd1461016e575b600080fd5b6101236102b1565b6040516101309190610c40565b60405180910390f35b61014c610147366004610caa565b610343565b6040519015158152602001610130565b6002545b604051908152602001610130565b61014c61017c366004610cd4565b61035d565b600554600160a01b900460ff1660405160ff9091168152602001610130565b61014c6101ae366004610caa565b610381565b61014c6101c1366004610caa565b6103a3565b6101606101d4366004610d10565b6001600160a01b031660009081526020819052604090205490565b6101f7610410565b005b6005546040516001600160a01b039091168152602001610130565b610123610446565b6101f761022a366004610caa565b610455565b61014c61023d366004610caa565b6104b8565b61014c610250366004610caa565b610533565b6101f7610263366004610d32565b610541565b610160610276366004610d6e565b610596565b6101f7610289366004610d10565b6105c1565b61014c61029c366004610d10565b60066020526000908152604090205460ff1681565b6060600380546102c090610da1565b80601f01602080910402602001604051908101604052809291908181526020018280546102ec90610da1565b80156103395780601f1061030e57610100808354040283529160200191610339565b820191906000526020600020905b81548152906001019060200180831161031c57829003601f168201915b5050505050905090565b60003361035181858561065c565b60019150505b92915050565b60003361036b858285610781565b6103768585856107fb565b506001949350505050565b6000336103518185856103948383610596565b61039e9190610df1565b61065c565b3360009081526006602052604081205460ff166103fd5760405162461bcd60e51b81526020600482015260136024820152722aa720aaaa2427a924ad22a22fa6a4a72a22a960691b60448201526064015b60405180910390fd5b61040783836109c9565b50600192915050565b6005546001600160a01b0316331461043a5760405162461bcd60e51b81526004016103f490610e04565b6104446000610aa8565b565b6060600480546102c090610da1565b3360009081526006602052604090205460ff166104aa5760405162461bcd60e51b81526020600482015260136024820152722aa720aaaa2427a924ad22a22fa6a4a72a22a960691b60448201526064016103f4565b6104b48282610afa565b5050565b600033816104c68286610596565b9050838110156105265760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103f4565b610376828686840361065c565b6000336103518185856107fb565b6005546001600160a01b0316331461056b5760405162461bcd60e51b81526004016103f490610e04565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6005546001600160a01b031633146105eb5760405162461bcd60e51b81526004016103f490610e04565b6001600160a01b0381166106505760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f4565b61065981610aa8565b50565b6001600160a01b0383166106be5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f4565b6001600160a01b03821661071f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f4565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061078d8484610596565b905060001981146107f557818110156107e85760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f4565b6107f5848484840361065c565b50505050565b6001600160a01b03831661085f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f4565b6001600160a01b0382166108c15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f4565b6001600160a01b038316600090815260208190526040902054818110156109395760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f4565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610970908490610df1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109bc91815260200190565b60405180910390a36107f5565b6001600160a01b038216610a1f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f4565b8060026000828254610a319190610df1565b90915550506001600160a01b03821660009081526020819052604081208054839290610a5e908490610df1565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610b5a5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f4565b6001600160a01b03821660009081526020819052604090205481811015610bce5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f4565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610bfd908490610e39565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610774565b600060208083528351808285015260005b81811015610c6d57858101830151858201604001528201610c51565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610ca557600080fd5b919050565b60008060408385031215610cbd57600080fd5b610cc683610c8e565b946020939093013593505050565b600080600060608486031215610ce957600080fd5b610cf284610c8e565b9250610d0060208501610c8e565b9150604084013590509250925092565b600060208284031215610d2257600080fd5b610d2b82610c8e565b9392505050565b60008060408385031215610d4557600080fd5b610d4e83610c8e565b915060208301358015158114610d6357600080fd5b809150509250929050565b60008060408385031215610d8157600080fd5b610d8a83610c8e565b9150610d9860208401610c8e565b90509250929050565b600181811c90821680610db557607f821691505b602082108103610dd557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561035757610357610ddb565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b8181038181111561035757610357610ddb56fea264697066735822122027cf580222d5d25b439c49247c7181d72b9fbf0f603cf62d0dfeef8b0c09182064736f6c63430008110033";

export class MyERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name: string,
    symbol: string,
    dec: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MyERC20> {
    return super.deploy(name, symbol, dec, overrides || {}) as Promise<MyERC20>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    dec: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, dec, overrides || {});
  }
  attach(address: string): MyERC20 {
    return super.attach(address) as MyERC20;
  }
  connect(signer: Signer): MyERC20__factory {
    return super.connect(signer) as MyERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC20Interface {
    return new utils.Interface(_abi) as MyERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC20 {
    return new Contract(address, _abi, signerOrProvider) as MyERC20;
  }
}
