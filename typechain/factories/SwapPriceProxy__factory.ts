/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SwapPriceProxy,
  SwapPriceProxyInterface,
} from "../SwapPriceProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feed",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "feed",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161040a38038061040a83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610377806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337a7b7d81461003b57806341976e091461006b575b600080fd5b60005461004e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61007e61007936600461018b565b61008c565b604051908152602001610062565b600080546040516302e731e560e31b81526001600160a01b038481166004830152839216906317398f2890602401602060405180830381865afa1580156100d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100fb91906101bb565b90506000836001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa15801561013d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061016191906101d4565b905061016e81600461020d565b61017990600a610310565b610183908361031f565b949350505050565b60006020828403121561019d57600080fd5b81356001600160a01b03811681146101b457600080fd5b9392505050565b6000602082840312156101cd57600080fd5b5051919050565b6000602082840312156101e657600080fd5b815160ff811681146101b457600080fd5b634e487b7160e01b600052601160045260246000fd5b60ff8181168382160190811115610226576102266101f7565b92915050565b600181815b8085111561026757816000190482111561024d5761024d6101f7565b8085161561025a57918102915b93841c9390800290610231565b509250929050565b60008261027e57506001610226565b8161028b57506000610226565b81600181146102a157600281146102ab576102c7565b6001915050610226565b60ff8411156102bc576102bc6101f7565b50506001821b610226565b5060208310610133831016604e8410600b84101617156102ea575081810a610226565b6102f4838361022c565b8060001904821115610308576103086101f7565b029392505050565b60006101b460ff84168361026f565b60008261033c57634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212206b9b2f88d77a5b92f4df221f683952bdc86b61a34ae9e2a6b42aa716eed4642264736f6c63430008110033";

export class SwapPriceProxy__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _feed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SwapPriceProxy> {
    return super.deploy(_feed, overrides || {}) as Promise<SwapPriceProxy>;
  }
  getDeployTransaction(
    _feed: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_feed, overrides || {});
  }
  attach(address: string): SwapPriceProxy {
    return super.attach(address) as SwapPriceProxy;
  }
  connect(signer: Signer): SwapPriceProxy__factory {
    return super.connect(signer) as SwapPriceProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapPriceProxyInterface {
    return new utils.Interface(_abi) as SwapPriceProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapPriceProxy {
    return new Contract(address, _abi, signerOrProvider) as SwapPriceProxy;
  }
}
