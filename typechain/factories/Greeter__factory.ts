/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161088138038061088183398101604081905261002f916100b1565b6100383361004b565b60016100448282610203565b50506102c2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156100c457600080fd5b82516001600160401b03808211156100db57600080fd5b818501915085601f8301126100ef57600080fd5b8151818111156101015761010161009b565b604051601f8201601f19908116603f011681019083821181831017156101295761012961009b565b81604052828152888684870101111561014157600080fd5b600093505b828410156101635784840186015181850187015292850192610146565b600086848301015280965050505050505092915050565b600181811c9082168061018e57607f821691505b6020821081036101ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fe57600081815260208120601f850160051c810160208610156101db5750805b601f850160051c820191505b818110156101fa578281556001016101e7565b5050505b505050565b81516001600160401b0381111561021c5761021c61009b565b6102308161022a845461017a565b846101b4565b602080601f831160018114610265576000841561024d5750858301515b600019600386901b1c1916600185901b1785556101fa565b600085815260208120601f198616915b8281101561029457888601518255948401946001909101908401610275565b50858210156102b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6105b0806102d16000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b14610066578063a413686214610086578063cfae321714610099578063f2fde38b146100ae575b600080fd5b6100646100c1565b005b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100646100943660046102cd565b610100565b6100a161013a565b60405161007d919061037e565b6100646100bc3660046103cc565b6101cc565b6000546001600160a01b031633146100f45760405162461bcd60e51b81526004016100eb906103fc565b60405180910390fd5b6100fe6000610267565b565b6000546001600160a01b0316331461012a5760405162461bcd60e51b81526004016100eb906103fc565b600161013682826104ba565b5050565b60606001805461014990610431565b80601f016020809104026020016040519081016040528092919081815260200182805461017590610431565b80156101c25780601f10610197576101008083540402835291602001916101c2565b820191906000526020600020905b8154815290600101906020018083116101a557829003601f168201915b5050505050905090565b6000546001600160a01b031633146101f65760405162461bcd60e51b81526004016100eb906103fc565b6001600160a01b03811661025b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100eb565b61026481610267565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156102df57600080fd5b813567ffffffffffffffff808211156102f757600080fd5b818401915084601f83011261030b57600080fd5b81358181111561031d5761031d6102b7565b604051601f8201601f19908116603f01168101908382118183101715610345576103456102b7565b8160405282815287602084870101111561035e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083528351808285015260005b818110156103ab5785810183015185820160400152820161038f565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156103de57600080fd5b81356001600160a01b03811681146103f557600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061044557607f821691505b60208210810361046557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156104b557600081815260208120601f850160051c810160208610156104925750805b601f850160051c820191505b818110156104b15782815560010161049e565b5050505b505050565b815167ffffffffffffffff8111156104d4576104d46102b7565b6104e8816104e28454610431565b8461046b565b602080601f83116001811461051d57600084156105055750858301515b600019600386901b1c1916600185901b1785556104b1565b600085815260208120601f198616915b8281101561054c5788860151825594840194600190910190840161052d565b508582101561056a5787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220dca4b4f9a58bea25c2ff0d4574db510753b0d6fc9d4e4d69d697435cecc6fba564736f6c63430008110033";

export class Greeter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
