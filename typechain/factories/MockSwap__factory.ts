/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockSwap, MockSwapInterface } from "../MockSwap";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "$borrow",
    outputs: [
      {
        internalType: "contract IBorrowForSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAvailability",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getPriceRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_indexToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "_notionalDelta",
        type: "uint256",
      },
    ],
    name: "increasePosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "protocolRevenueExtract",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeReserve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "repayAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "repay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_borrow",
        type: "address",
      },
    ],
    name: "setBorrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "settleFutureProfit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b898061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80636c665a551161008c578063bfb21b7611610066578063bfb21b76146101fa578063dab8a65414610225578063f2744fd11461023a578063f2fde38b1461024d57600080fd5b80636c665a55146101ce578063715018a6146101e15780638da5cb5b146101e957600080fd5b806340e9cd2e116100c857806340e9cd2e1461014d578063556a4ffb1461017d5780635ceae9c4146101905780635d112fec146101a357600080fd5b8063249715b3146100ef578063269ba30c146101045780632b1c511f1461012c575b600080fd5b6101026100fd3660046109bd565b610260565b005b6101176101123660046109e7565b6103be565b60405190151581526020015b60405180910390f35b61013f61013a366004610a23565b6103ee565b604051908152602001610123565b61010261015b366004610a23565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61010261018b3660046109bd565b61045f565b61013f61019e3660046109e7565b610498565b6001546101b6906001600160a01b031681565b6040516001600160a01b039091168152602001610123565b61013f6101dc3660046109e7565b610587565b6101026105c0565b6000546001600160a01b03166101b6565b610210610208366004610a23565b506001908190565b60408051928352602083019190915201610123565b610102610233366004610a4c565b5050505050565b6101026102483660046109e7565b61062b565b61010261025b366004610a23565b610640565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044015b6020604051808303816000875af11580156102ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d29190610aaa565b506001546040516370a0823160e01b81523060048201526001600160a01b039182169163f83a10ca9185918216906370a0823190602401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610ac7565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610395573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103b99190610aaa565b505050565b6001600160a01b0380841660009081526002602052604080822085905591831681522082905560015b9392505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610ac7565b92915050565b6040516323b872dd60e01b8152336004820152306024820152604481018290526001600160a01b038316906323b872dd9060640161028f565b6040516323b872dd60e01b81526001600160a01b03828116600483015230602483015260448201849052600091908516906323b872dd906064015b6020604051808303816000875af11580156104f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105169190610aaa565b506040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa15801561055b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057f9190610ac7565b949350505050565b60405163a9059cbb60e01b81526001600160a01b038281166004830152602482018490526000919085169063a9059cbb906044016104d3565b6000546001600160a01b0316331461061f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b610629600061070b565b565b6103b96001600160a01b03841682308561075b565b6000546001600160a01b0316331461069a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610616565b6001600160a01b0381166106ff5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610616565b6107088161070b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526107b59085906107bb565b50505050565b6000610810826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661088d9092919063ffffffff16565b8051909150156103b9578080602001905181019061082e9190610aaa565b6103b95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610616565b606061057f8484600085856001600160a01b0385163b6108ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610616565b600080866001600160a01b0316858760405161090b9190610b04565b60006040518083038185875af1925050503d8060008114610948576040519150601f19603f3d011682016040523d82523d6000602084013e61094d565b606091505b509150915061095d828286610968565b979650505050505050565b606083156109775750816103e7565b8251156109875782518084602001fd5b8160405162461bcd60e51b81526004016106169190610b20565b80356001600160a01b03811681146109b857600080fd5b919050565b600080604083850312156109d057600080fd5b6109d9836109a1565b946020939093013593505050565b6000806000606084860312156109fc57600080fd5b610a05846109a1565b925060208401359150610a1a604085016109a1565b90509250925092565b600060208284031215610a3557600080fd5b6103e7826109a1565b801515811461070857600080fd5b600080600080600060a08688031215610a6457600080fd5b610a6d866109a1565b9450610a7b602087016109a1565b9350610a89604087016109a1565b92506060860135610a9981610a3e565b949793965091946080013592915050565b600060208284031215610abc57600080fd5b81516103e781610a3e565b600060208284031215610ad957600080fd5b5051919050565b60005b83811015610afb578181015183820152602001610ae3565b50506000910152565b60008251610b16818460208701610ae0565b9190910192915050565b6020815260008251806020840152610b3f816040850160208701610ae0565b601f01601f1916919091016040019291505056fea2646970667358221220eac3b2a093acc097fc2338aa61cdbdc535abf13e2a7344387497d91ed2578b3364736f6c63430008110033";

export class MockSwap__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSwap> {
    return super.deploy(overrides || {}) as Promise<MockSwap>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockSwap {
    return super.attach(address) as MockSwap;
  }
  connect(signer: Signer): MockSwap__factory {
    return super.connect(signer) as MockSwap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSwapInterface {
    return new utils.Interface(_abi) as MockSwapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSwap {
    return new Contract(address, _abi, signerOrProvider) as MockSwap;
  }
}
