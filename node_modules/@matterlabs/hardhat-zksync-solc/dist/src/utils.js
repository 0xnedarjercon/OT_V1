"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getZksolcUrl = exports.getZksolcPath = exports.pluginError = exports.zeroxlify = void 0;
const plugins_1 = require("hardhat/plugins");
const global_dir_1 = require("hardhat/internal/util/global-dir");
const path_1 = __importDefault(require("path"));
function zeroxlify(hex) {
    hex = hex.toLowerCase();
    return hex.slice(0, 2) === '0x' ? hex : `0x${hex}`;
}
exports.zeroxlify = zeroxlify;
// Returns a built plugin exception object.
function pluginError(message, parent) {
    return new plugins_1.NomicLabsHardhatPluginError('@matterlabs/hardhat-zksync-solc', message, parent);
}
exports.pluginError = pluginError;
async function getZksolcPath(version) {
    return path_1.default.join(await (0, global_dir_1.getCompilersDir)(), 'zksolc', `zksolc-v${version}`);
}
exports.getZksolcPath = getZksolcPath;
function getZksolcUrl(version) {
    const platform = process.platform == 'darwin' ? 'macosx' : process.platform;
    const arch = process.arch == 'x64' ? 'amd64' : process.arch;
    const musl = platform == 'linux' ? '-musl' : '';
    return `https://github.com/matter-labs/zksolc-bin/raw/main/${platform}-${arch}/zksolc-${platform}-${arch}${musl}-v${version}`;
}
exports.getZksolcUrl = getZksolcUrl;
//# sourceMappingURL=utils.js.map